#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <portfolio_names_file> <output_csv_file>"
    exit 1
fi

# Input file with portfolio names
PORTFOLIO_FILE=$1

# Output CSV file
OUTPUT_CSV=$2

# URL template (replace spaces with %20)
URL_TEMPLATE="http://uat.controls-runtime.site.gs.com:8080/ssps/Current/CE%20IRM?function=irm&PortfolioName="

# Create or clear the output CSV file and add the header
echo "PortfolioName,BookID" > "$OUTPUT_CSV"

# Function to fetch and process data for a given portfolio name
fetch_and_process() {
    local portfolio_name="$1"
    local url="${URL_TEMPLATE}$(echo $portfolio_name | sed 's/ /%20/g')"
    
    # Fetch JSON data using curl
    local json_data=$(curl -s "$url")
    
    # Extract "book id" associated with the given "PortfolioName" using jq
    local book_ids=$(echo "$json_data" | jq -r --arg PORTFOLIO_NAME "$portfolio_name" '
        .[] | select(.PortfolioName == $PORTFOLIO_NAME) | .["book id"]')

    # Check if book_ids is not empty and write to CSV
    if [ -n "$book_ids" ]; then
        echo "$book_ids" | while IFS= read -r book_id; do
            echo "\"$portfolio_name\",\"$book_id\"" >> "$OUTPUT_CSV"
        done
    else
        echo "\"$portfolio_name\",\"\"" >> "$OUTPUT_CSV"
    fi
}

# Read portfolio names from the input file and process each one
while IFS= read -r portfolio_name; do
    fetch_and_process "$portfolio_name"
done < "$PORTFOLIO_FILE"

echo "Output written to $OUTPUT_CSV"
